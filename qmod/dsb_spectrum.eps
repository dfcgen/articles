%!PS-Adobe-2.0 EPSF-2.0
%%Title: dsb_spectrum.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%CreationDate: Sat May 14 16:23:56 2011
%%BoundingBox: 0 0 250 211
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.612 0.000 0.000 srgb} bind def
/col33 {0.549 0.549 0.549 srgb} bind def
/col34 {0.549 0.549 0.549 srgb} bind def
/col35 {0.259 0.259 0.259 srgb} bind def
/col36 {0.549 0.549 0.549 srgb} bind def
/col37 {0.259 0.259 0.259 srgb} bind def
/col38 {0.549 0.549 0.549 srgb} bind def
/col39 {0.259 0.259 0.259 srgb} bind def
/col40 {0.549 0.549 0.549 srgb} bind def
/col41 {0.259 0.259 0.259 srgb} bind def
/col42 {0.549 0.549 0.549 srgb} bind def
/col43 {0.259 0.259 0.259 srgb} bind def
/col44 {0.761 0.761 0.761 srgb} bind def
/col45 {0.431 0.431 0.431 srgb} bind def
/col46 {0.267 0.267 0.267 srgb} bind def
/col47 {0.557 0.561 0.557 srgb} bind def
/col48 {0.443 0.443 0.443 srgb} bind def
/col49 {0.682 0.682 0.682 srgb} bind def
/col50 {0.200 0.200 0.200 srgb} bind def
/col51 {0.580 0.576 0.584 srgb} bind def
/col52 {0.455 0.439 0.459 srgb} bind def
/col53 {0.333 0.333 0.333 srgb} bind def
/col54 {0.702 0.702 0.702 srgb} bind def
/col55 {0.765 0.765 0.765 srgb} bind def
/col56 {0.427 0.427 0.427 srgb} bind def
/col57 {0.271 0.271 0.271 srgb} bind def
/col58 {0.557 0.557 0.557 srgb} bind def
/col59 {0.776 0.718 0.592 srgb} bind def
/col60 {0.937 0.973 1.000 srgb} bind def
/col61 {0.863 0.796 0.651 srgb} bind def
/col62 {0.251 0.251 0.251 srgb} bind def
/col63 {0.502 0.502 0.502 srgb} bind def
/col64 {0.753 0.753 0.753 srgb} bind def
/col65 {0.878 0.878 0.878 srgb} bind def
/col66 {0.667 0.667 0.667 srgb} bind def
/col67 {0.780 0.765 0.780 srgb} bind def
/col68 {0.337 0.318 0.318 srgb} bind def
/col69 {0.843 0.843 0.843 srgb} bind def
/col70 {0.522 0.502 0.490 srgb} bind def
/col71 {0.824 0.824 0.824 srgb} bind def
/col72 {0.227 0.227 0.227 srgb} bind def
/col73 {0.271 0.451 0.667 srgb} bind def
/col74 {0.482 0.475 0.647 srgb} bind def
/col75 {0.451 0.459 0.549 srgb} bind def
/col76 {0.969 0.969 0.969 srgb} bind def
/col77 {0.388 0.365 0.808 srgb} bind def
/col78 {0.745 0.745 0.745 srgb} bind def
/col79 {0.318 0.318 0.318 srgb} bind def
/col80 {0.906 0.890 0.906 srgb} bind def
/col81 {0.000 0.000 0.286 srgb} bind def
/col82 {0.475 0.475 0.475 srgb} bind def
/col83 {0.188 0.204 0.188 srgb} bind def
/col84 {0.255 0.255 0.255 srgb} bind def
/col85 {0.780 0.714 0.588 srgb} bind def
/col86 {0.255 0.271 0.255 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 8 16 true [ 8 0 0 -16 0 16 ]
	{<11111111111111111111111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P10 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 211 moveto 0 0 lineto 250 0 lineto 250 211 lineto closepath clip newpath
-4.3 231.9 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
2 slj
0 slc
7.500 slw
n 1358 1671 m 1346 1675 l 1333 1677 l 1319 1679 l 1303 1681 l 1288 1683 l
 1272 1685 l 1258 1688 l 1245 1693 l 1234 1698 l 1226 1705 l
 1220 1713 l 1215 1722 l 1211 1732 l 1208 1744 l 1205 1757 l
 1202 1771 l 1200 1785 l 1198 1799 l 1195 1812 l 1193 1825 l
 1189 1836 l 1185 1847 l 1179 1858 l 1172 1869 l 1163 1879 l
 1153 1888 l 1142 1896 l 1131 1904 l 1120 1910 l 1109 1916 l
 1100 1920 l 1092 1924 l 1080 1930 l 1070 1936 l 1060 1943 l
 1050 1950 l 1044 1954 l 1043 1955 l 1042 1954 l 1039 1951 l
 1031 1943 l 1018 1930 l 1002 1914 l 987 1899 l 974 1886 l
 966 1878 l 963 1875 l 962 1874 l 962 1878 l 961 1885 l
 959 1899 l 957 1919 l 954 1946 l 951 1976 l 948 2010 l
 944 2044 l 941 2074 l 938 2101 l 936 2121 l 934 2135 l
 933 2142 l 933 2146 l 937 2146 l 944 2145 l 958 2143 l
 978 2141 l 1005 2138 l 1035 2135 l 1069 2131 l 1103 2127 l
 1133 2124 l 1160 2121 l 1180 2119 l 1194 2117 l 1201 2116 l
 1205 2116 l 1204 2115 l 1201 2112 l 1193 2104 l 1180 2091 l
 1164 2075 l 1149 2060 l 1136 2047 l 1128 2039 l 1125 2036 l
 1124 2035 l 1125 2034 l 1130 2029 l 1138 2020 l 1148 2012 l
 1157 2005 l 1169 1997 l 1177 1992 l 1187 1987 l 1197 1981 l
 1208 1973 l 1220 1965 l 1231 1956 l 1242 1947 l 1251 1937 l
 1259 1926 l 1266 1915 l 1270 1903 l 1274 1890 l 1278 1876 l
 1281 1861 l 1283 1846 l 1286 1831 l 1290 1817 l 1294 1805 l
 1300 1795 l 1306 1787 l 1315 1780 l 1325 1774 l 1337 1770 l
 1351 1766 l 1366 1763 l 1381 1759 l 1396 1756 l 1411 1752 l
 1424 1748 l 1436 1743 l 1445 1737 l 1453 1730 l 1461 1721 l
 1470 1710 l 1478 1697 l 1487 1681 l 1497 1664 l 1505 1648 l
 1512 1634 l 1516 1626 l 1518 1622 l 1518 1621 l 1517 1621 l
 1513 1619 l 1504 1615 l 1490 1608 l 1472 1599 l 1455 1591 l
 1441 1584 l 1432 1580 l 1428 1578 l 1427 1578 l 1427 1579 l
 1424 1584 l 1419 1595 l 1412 1609 l 1403 1625 l 1394 1639 l
 1386 1651 l 1377 1660 l 1368 1667 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2423 1671 m 2434 1675 l 2447 1677 l 2461 1679 l 2477 1681 l 2492 1683 l
 2508 1685 l 2522 1688 l 2535 1693 l 2546 1698 l 2554 1705 l
 2560 1713 l 2565 1722 l 2569 1732 l 2572 1744 l 2575 1757 l
 2578 1771 l 2580 1785 l 2582 1799 l 2585 1812 l 2587 1825 l
 2591 1836 l 2595 1847 l 2601 1858 l 2608 1869 l 2617 1879 l
 2627 1888 l 2638 1896 l 2649 1904 l 2660 1910 l 2671 1916 l
 2680 1920 l 2688 1924 l 2700 1930 l 2710 1936 l 2720 1943 l
 2730 1950 l 2736 1954 l 2737 1955 l 2738 1954 l 2741 1951 l
 2749 1943 l 2762 1930 l 2778 1914 l 2793 1899 l 2806 1886 l
 2814 1878 l 2817 1875 l 2818 1874 l 2818 1878 l 2819 1885 l
 2821 1899 l 2823 1919 l 2826 1946 l 2829 1976 l 2833 2010 l
 2836 2044 l 2839 2074 l 2842 2101 l 2844 2121 l 2846 2135 l
 2847 2142 l 2847 2146 l 2843 2146 l 2836 2145 l 2822 2143 l
 2802 2141 l 2775 2138 l 2745 2135 l 2711 2131 l 2677 2127 l
 2647 2124 l 2620 2121 l 2600 2119 l 2586 2117 l 2579 2116 l
 2575 2116 l 2576 2115 l 2579 2112 l 2587 2104 l 2600 2091 l
 2616 2075 l 2631 2060 l 2644 2047 l 2652 2039 l 2655 2036 l
 2656 2035 l 2655 2034 l 2650 2029 l 2642 2020 l 2632 2012 l
 2623 2005 l 2611 1997 l 2603 1992 l 2593 1987 l 2583 1981 l
 2572 1973 l 2560 1965 l 2549 1956 l 2538 1947 l 2529 1937 l
 2521 1926 l 2515 1915 l 2510 1903 l 2506 1890 l 2502 1876 l
 2499 1861 l 2497 1846 l 2494 1831 l 2490 1817 l 2486 1805 l
 2480 1795 l 2474 1787 l 2465 1780 l 2455 1774 l 2443 1770 l
 2429 1766 l 2414 1763 l 2399 1759 l 2384 1756 l 2369 1752 l
 2356 1748 l 2344 1743 l 2335 1737 l 2327 1730 l 2319 1721 l
 2310 1710 l 2302 1697 l 2293 1681 l 2283 1664 l 2275 1648 l
 2268 1634 l 2264 1626 l 2262 1622 l 2262 1621 l 2263 1621 l
 2267 1619 l 2276 1615 l 2290 1608 l 2308 1599 l 2325 1591 l
 2339 1584 l 2348 1580 l 2352 1578 l 2353 1578 l 2353 1579 l
 2356 1584 l 2361 1595 l 2368 1609 l 2377 1625 l 2386 1639 l
 2394 1651 l 2403 1660 l 2412 1667 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 720 3375 m 630 3015 l 360 3015 l 180 3375 l 720 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 12.00 201.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 720 3375 m 810 3015 l 1080 3015 l 1260 3375 l 720 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 48.00 201.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3060 3375 m 2970 3015 l 2700 3015 l 2520 3375 l 3060 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 168.00 201.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3060 3375 m 3150 3015 l 3420 3015 l 3600 3375 l 3060 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 204.00 201.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1890 1260 m 1800 900 l 1530 900 l 1350 1260 l 1890 1260 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 90.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1890 1260 m 1980 900 l 2250 900 l 2430 1260 l 1890 1260 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 126.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
15.000 slw
gs  clippath
3845 3405 m 3975 3405 l 3975 3345 l 3845 3345 l 3845 3345 l 3935 3375 l 3845 3405 l cp
eoclip
n 90 3375 m
 3960 3375 l gs col0 s gr gr

% arrowhead
n 3845 3405 m 3935 3375 l 3845 3345 l 3845 3405 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1920 2590 m 1920 2460 l 1860 2460 l 1860 2590 l 1860 2590 l 1890 2500 l 1920 2590 l cp
eoclip
n 1890 3465 m
 1890 2475 l gs col0 s gr gr

% arrowhead
n 1920 2590 m 1890 2500 l 1860 2590 l 1920 2590 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3060 3465 m
 3060 3375 l gs col0 s gr 
% Polyline
gs  clippath
3845 1290 m 3975 1290 l 3975 1230 l 3845 1230 l 3845 1230 l 3935 1260 l 3845 1290 l cp
eoclip
n 90 1260 m
 3960 1260 l gs col0 s gr gr

% arrowhead
n 3845 1290 m 3935 1260 l 3845 1230 l 3845 1290 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1920 475 m 1920 345 l 1860 345 l 1860 475 l 1860 475 l 1890 385 l 1920 475 l cp
eoclip
n 1890 1350 m
 1890 360 l gs col0 s gr gr

% arrowhead
n 1920 475 m 1890 385 l 1860 475 l 1920 475 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 720 3465 m
 720 3375 l gs col0 s gr 
% Polyline
7.500 slw
 [30] 0 sd
n 720 3375 m
 720 2520 l gs col0 s gr  [] 0 sd
% Polyline
 [30] 0 sd
n 3060 3375 m
 3060 2520 l gs col0 s gr  [] 0 sd
% Polyline
n 1350 360 m
 1350 540 l gs col0 s gr 
% Polyline
n 1800 360 m
 1800 540 l gs col0 s gr 
% Polyline
n 1305 2475 m
 1305 2655 l gs col0 s gr 
% Polyline
n 1800 2475 m
 1800 2655 l gs col0 s gr 
/Symbol ff 174.63 scf sf
1620 2610 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1755 2610 m
gs 1 -1 sc (M\(   \)) dup sw pop neg 0 rm  col0 sh gr
/Symbol ff 174.63 scf sf
1620 495 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1755 495 m
gs 1 -1 sc (F\(   \)) dup sw pop neg 0 rm  col0 sh gr
/Symbol ff 174.63 scf sf
3041 3619 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 127.00 scf sf
3113 3666 m
gs 1 -1 sc (0) col0 sh gr
/Symbol ff 174.63 scf sf
701 3619 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 127.00 scf sf
773 3666 m
gs 1 -1 sc (0) col0 sh gr
/Symbol ff 174.63 scf sf
3870 3600 m
gs 1 -1 sc (w) col0 sh gr
/Symbol ff 174.63 scf sf
3870 1485 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
630 3600 m
gs 1 -1 sc (-) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1890 3645 m
gs 1 -1 sc (0) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
