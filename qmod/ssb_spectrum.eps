%!PS-Adobe-2.0 EPSF-2.0
%%Title: ssb_spectrum.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%CreationDate: Mon Jun 20 11:50:08 2011
%%BoundingBox: 0 0 250 302
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.612 0.000 0.000 srgb} bind def
/col33 {0.549 0.549 0.549 srgb} bind def
/col34 {0.549 0.549 0.549 srgb} bind def
/col35 {0.259 0.259 0.259 srgb} bind def
/col36 {0.549 0.549 0.549 srgb} bind def
/col37 {0.259 0.259 0.259 srgb} bind def
/col38 {0.549 0.549 0.549 srgb} bind def
/col39 {0.259 0.259 0.259 srgb} bind def
/col40 {0.549 0.549 0.549 srgb} bind def
/col41 {0.259 0.259 0.259 srgb} bind def
/col42 {0.549 0.549 0.549 srgb} bind def
/col43 {0.259 0.259 0.259 srgb} bind def
/col44 {0.255 0.271 0.255 srgb} bind def
/col45 {0.753 0.753 0.753 srgb} bind def
/col46 {0.486 0.486 0.486 srgb} bind def
/col47 {0.788 0.667 0.631 srgb} bind def
/col48 {0.557 0.557 0.557 srgb} bind def
/col49 {0.502 0.502 0.502 srgb} bind def
/col50 {0.714 0.714 0.714 srgb} bind def
/col51 {0.675 0.580 0.471 srgb} bind def
/col52 {0.878 0.878 0.878 srgb} bind def
/col53 {0.620 0.620 0.620 srgb} bind def
/col54 {0.525 0.510 0.525 srgb} bind def
/col55 {0.443 0.459 0.443 srgb} bind def
/col56 {0.906 0.890 0.906 srgb} bind def
/col57 {0.667 0.667 0.667 srgb} bind def
/col58 {0.682 0.667 0.682 srgb} bind def
/col59 {0.333 0.333 0.333 srgb} bind def
/col60 {0.267 0.267 0.267 srgb} bind def
/col61 {0.780 0.765 0.780 srgb} bind def
/col62 {0.780 0.780 0.780 srgb} bind def
/col63 {0.459 0.459 0.459 srgb} bind def
/col64 {0.953 0.953 0.953 srgb} bind def
/col65 {0.788 0.788 0.788 srgb} bind def
/col66 {0.875 0.847 0.875 srgb} bind def
/col67 {0.969 0.953 0.969 srgb} bind def
/col68 {0.800 0.800 0.800 srgb} bind def
/col69 {0.867 0.616 0.576 srgb} bind def
/col70 {0.945 0.925 0.878 srgb} bind def
/col71 {0.765 0.765 0.765 srgb} bind def
/col72 {0.886 0.784 0.659 srgb} bind def
/col73 {0.882 0.882 0.882 srgb} bind def
/col74 {0.824 0.824 0.824 srgb} bind def
/col75 {0.929 0.929 0.929 srgb} bind def
/col76 {0.855 0.478 0.102 srgb} bind def
/col77 {0.945 0.894 0.102 srgb} bind def
/col78 {0.533 0.490 0.761 srgb} bind def
/col79 {0.690 0.631 0.576 srgb} bind def
/col80 {0.514 0.486 0.867 srgb} bind def
/col81 {0.839 0.839 0.839 srgb} bind def
/col82 {0.549 0.549 0.647 srgb} bind def
/col83 {0.290 0.290 0.290 srgb} bind def
/col84 {0.549 0.420 0.420 srgb} bind def
/col85 {0.353 0.353 0.353 srgb} bind def
/col86 {0.388 0.388 0.388 srgb} bind def
/col87 {0.718 0.608 0.451 srgb} bind def
/col88 {0.255 0.576 1.000 srgb} bind def
/col89 {0.749 0.439 0.231 srgb} bind def
/col90 {0.859 0.467 0.000 srgb} bind def
/col91 {0.855 0.722 0.000 srgb} bind def
/col92 {0.000 0.392 0.000 srgb} bind def
/col93 {0.353 0.420 0.231 srgb} bind def
/col94 {0.827 0.827 0.827 srgb} bind def
/col95 {0.557 0.557 0.643 srgb} bind def
/col96 {0.953 0.725 0.365 srgb} bind def
/col97 {0.537 0.600 0.420 srgb} bind def
/col98 {0.392 0.392 0.392 srgb} bind def
/col99 {0.718 0.902 1.000 srgb} bind def
/col100 {0.525 0.753 0.925 srgb} bind def
/col101 {0.741 0.741 0.741 srgb} bind def
/col102 {0.827 0.584 0.322 srgb} bind def
/col103 {0.596 0.824 0.996 srgb} bind def
/col104 {0.380 0.380 0.380 srgb} bind def
/col105 {0.682 0.698 0.682 srgb} bind def
/col106 {0.443 0.443 0.443 srgb} bind def
/col107 {1.000 0.604 0.000 srgb} bind def
/col108 {0.549 0.612 0.420 srgb} bind def
/col109 {0.969 0.420 0.000 srgb} bind def
/col110 {0.353 0.420 0.224 srgb} bind def
/col111 {0.549 0.612 0.420 srgb} bind def
/col112 {0.549 0.612 0.482 srgb} bind def
/col113 {0.094 0.290 0.094 srgb} bind def
/col114 {0.678 0.678 0.678 srgb} bind def
/col115 {0.969 0.741 0.353 srgb} bind def
/col116 {0.388 0.420 0.612 srgb} bind def
/col117 {0.969 0.969 0.969 srgb} bind def
/col118 {0.871 0.000 0.000 srgb} bind def
/col119 {0.678 0.678 0.678 srgb} bind def
/col120 {0.969 0.741 0.353 srgb} bind def
/col121 {0.678 0.678 0.678 srgb} bind def
/col122 {0.969 0.741 0.353 srgb} bind def
/col123 {0.388 0.420 0.612 srgb} bind def
/col124 {0.322 0.420 0.161 srgb} bind def
/col125 {0.580 0.580 0.580 srgb} bind def
/col126 {0.000 0.388 0.000 srgb} bind def
/col127 {0.000 0.388 0.290 srgb} bind def
/col128 {0.482 0.518 0.290 srgb} bind def
/col129 {0.906 0.741 0.482 srgb} bind def
/col130 {0.647 0.710 0.776 srgb} bind def
/col131 {0.420 0.420 0.580 srgb} bind def
/col132 {0.518 0.420 0.420 srgb} bind def
/col133 {0.322 0.612 0.290 srgb} bind def
/col134 {0.839 0.906 0.906 srgb} bind def
/col135 {0.322 0.388 0.388 srgb} bind def
/col136 {0.094 0.420 0.290 srgb} bind def
/col137 {0.612 0.647 0.710 srgb} bind def
/col138 {1.000 0.580 0.000 srgb} bind def
/col139 {1.000 0.580 0.000 srgb} bind def
/col140 {0.000 0.388 0.290 srgb} bind def
/col141 {0.482 0.518 0.290 srgb} bind def
/col142 {0.388 0.451 0.482 srgb} bind def
/col143 {0.906 0.741 0.482 srgb} bind def
/col144 {0.094 0.290 0.094 srgb} bind def
/col145 {0.969 0.741 0.353 srgb} bind def
/col146 {0.000 0.000 0.000 srgb} bind def
/col147 {0.969 0.220 0.161 srgb} bind def
/col148 {0.000 0.000 0.000 srgb} bind def
/col149 {1.000 1.000 0.322 srgb} bind def
/col150 {0.322 0.475 0.290 srgb} bind def
/col151 {0.388 0.604 0.353 srgb} bind def
/col152 {0.776 0.380 0.259 srgb} bind def
/col153 {0.906 0.412 0.259 srgb} bind def
/col154 {1.000 0.475 0.322 srgb} bind def
/col155 {0.871 0.871 0.871 srgb} bind def
/col156 {0.953 0.933 0.827 srgb} bind def
/col157 {0.961 0.682 0.365 srgb} bind def
/col158 {0.584 0.808 0.600 srgb} bind def
/col159 {0.710 0.082 0.490 srgb} bind def
/col160 {0.933 0.933 0.933 srgb} bind def
/col161 {0.518 0.518 0.518 srgb} bind def
/col162 {0.482 0.482 0.482 srgb} bind def
/col163 {0.000 0.353 0.000 srgb} bind def
/col164 {0.906 0.451 0.451 srgb} bind def
/col165 {1.000 0.796 0.192 srgb} bind def
/col166 {0.161 0.475 0.290 srgb} bind def
/col167 {0.871 0.157 0.129 srgb} bind def
/col168 {0.129 0.349 0.776 srgb} bind def
/col169 {0.973 0.973 0.973 srgb} bind def
/col170 {0.902 0.902 0.902 srgb} bind def
/col171 {0.129 0.518 0.353 srgb} bind def
/col172 {0.776 0.718 0.592 srgb} bind def
/col173 {0.937 0.973 1.000 srgb} bind def
/col174 {0.863 0.796 0.651 srgb} bind def
/col175 {0.251 0.251 0.251 srgb} bind def
/col176 {0.557 0.561 0.557 srgb} bind def
/col177 {0.337 0.318 0.318 srgb} bind def
/col178 {0.843 0.843 0.843 srgb} bind def
/col179 {0.522 0.502 0.490 srgb} bind def
/col180 {0.227 0.227 0.227 srgb} bind def
/col181 {0.271 0.451 0.667 srgb} bind def
/col182 {0.682 0.682 0.682 srgb} bind def
/col183 {0.482 0.475 0.647 srgb} bind def
/col184 {0.451 0.459 0.549 srgb} bind def
/col185 {0.388 0.365 0.808 srgb} bind def
/col186 {0.745 0.745 0.745 srgb} bind def
/col187 {0.318 0.318 0.318 srgb} bind def
/col188 {0.000 0.000 0.286 srgb} bind def
/col189 {0.475 0.475 0.475 srgb} bind def
/col190 {0.188 0.204 0.188 srgb} bind def
/col191 {0.255 0.255 0.255 srgb} bind def
/col192 {0.780 0.714 0.588 srgb} bind def
/col193 {0.886 0.886 0.933 srgb} bind def
/col194 {0.580 0.580 0.604 srgb} bind def
/col195 {0.859 0.859 0.859 srgb} bind def
/col196 {0.631 0.631 0.718 srgb} bind def
/col197 {0.525 0.675 1.000 srgb} bind def
/col198 {0.439 0.439 1.000 srgb} bind def
/col199 {0.761 0.761 0.761 srgb} bind def
/col200 {0.431 0.431 0.431 srgb} bind def
/col201 {0.200 0.200 0.200 srgb} bind def
/col202 {0.580 0.576 0.584 srgb} bind def
/col203 {0.455 0.439 0.459 srgb} bind def
/col204 {0.702 0.702 0.702 srgb} bind def
/col205 {0.427 0.427 0.427 srgb} bind def
/col206 {0.271 0.271 0.271 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 8 16 true [ 8 0 0 -16 0 16 ]
	{<11111111111111111111111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P10 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 302 moveto 0 0 lineto 250 0 lineto 250 302 lineto closepath clip newpath
-4.3 322.6 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
2 slj
0 slc
7.500 slw
n 1358 3111 m 1346 3115 l 1333 3117 l 1319 3119 l 1303 3121 l 1288 3123 l
 1272 3125 l 1258 3128 l 1245 3133 l 1234 3138 l 1226 3145 l
 1220 3153 l 1215 3162 l 1211 3172 l 1208 3184 l 1205 3197 l
 1202 3211 l 1200 3225 l 1198 3239 l 1195 3252 l 1193 3265 l
 1189 3276 l 1185 3287 l 1179 3298 l 1172 3309 l 1163 3319 l
 1153 3328 l 1142 3336 l 1131 3344 l 1120 3350 l 1109 3356 l
 1100 3360 l 1092 3364 l 1080 3370 l 1070 3376 l 1060 3383 l
 1050 3390 l 1044 3394 l 1043 3395 l 1042 3394 l 1039 3391 l
 1031 3383 l 1018 3370 l 1002 3354 l 987 3339 l 974 3326 l
 966 3318 l 963 3315 l 962 3314 l 962 3318 l 961 3325 l
 959 3339 l 957 3359 l 954 3386 l 951 3416 l 948 3450 l
 944 3484 l 941 3514 l 938 3541 l 936 3561 l 934 3575 l
 933 3582 l 933 3586 l 937 3586 l 944 3585 l 958 3583 l
 978 3581 l 1005 3578 l 1035 3575 l 1069 3571 l 1103 3567 l
 1133 3564 l 1160 3561 l 1180 3559 l 1194 3557 l 1201 3556 l
 1205 3556 l 1204 3555 l 1201 3552 l 1193 3544 l 1180 3531 l
 1164 3515 l 1149 3500 l 1136 3487 l 1128 3479 l 1125 3476 l
 1124 3475 l 1125 3474 l 1130 3469 l 1138 3460 l 1148 3452 l
 1157 3445 l 1169 3437 l 1177 3432 l 1187 3427 l 1197 3421 l
 1208 3413 l 1220 3405 l 1231 3396 l 1242 3387 l 1251 3377 l
 1259 3366 l 1266 3355 l 1270 3343 l 1274 3330 l 1278 3316 l
 1281 3301 l 1283 3286 l 1286 3271 l 1290 3257 l 1294 3245 l
 1300 3235 l 1306 3227 l 1315 3220 l 1325 3214 l 1337 3210 l
 1351 3206 l 1366 3203 l 1381 3199 l 1396 3196 l 1411 3192 l
 1424 3188 l 1436 3183 l 1445 3177 l 1453 3170 l 1461 3161 l
 1470 3150 l 1478 3137 l 1487 3121 l 1497 3104 l 1505 3088 l
 1512 3074 l 1516 3066 l 1518 3062 l 1518 3061 l 1517 3061 l
 1513 3059 l 1504 3055 l 1490 3048 l 1472 3039 l 1455 3031 l
 1441 3024 l 1432 3020 l 1428 3018 l 1427 3018 l 1427 3019 l
 1424 3024 l 1419 3035 l 1412 3049 l 1403 3065 l 1394 3079 l
 1386 3091 l 1377 3100 l 1368 3107 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2423 3111 m 2434 3115 l 2447 3117 l 2461 3119 l 2477 3121 l 2492 3123 l
 2508 3125 l 2522 3128 l 2535 3133 l 2546 3138 l 2554 3145 l
 2560 3153 l 2565 3162 l 2569 3172 l 2572 3184 l 2575 3197 l
 2578 3211 l 2580 3225 l 2582 3239 l 2585 3252 l 2587 3265 l
 2591 3276 l 2595 3287 l 2601 3298 l 2608 3309 l 2617 3319 l
 2627 3328 l 2638 3336 l 2649 3344 l 2660 3350 l 2671 3356 l
 2680 3360 l 2688 3364 l 2700 3370 l 2710 3376 l 2720 3383 l
 2730 3390 l 2736 3394 l 2737 3395 l 2738 3394 l 2741 3391 l
 2749 3383 l 2762 3370 l 2778 3354 l 2793 3339 l 2806 3326 l
 2814 3318 l 2817 3315 l 2818 3314 l 2818 3318 l 2819 3325 l
 2821 3339 l 2823 3359 l 2826 3386 l 2829 3416 l 2833 3450 l
 2836 3484 l 2839 3514 l 2842 3541 l 2844 3561 l 2846 3575 l
 2847 3582 l 2847 3586 l 2843 3586 l 2836 3585 l 2822 3583 l
 2802 3581 l 2775 3578 l 2745 3575 l 2711 3571 l 2677 3567 l
 2647 3564 l 2620 3561 l 2600 3559 l 2586 3557 l 2579 3556 l
 2575 3556 l 2576 3555 l 2579 3552 l 2587 3544 l 2600 3531 l
 2616 3515 l 2631 3500 l 2644 3487 l 2652 3479 l 2655 3476 l
 2656 3475 l 2655 3474 l 2650 3469 l 2642 3460 l 2632 3452 l
 2623 3445 l 2611 3437 l 2603 3432 l 2593 3427 l 2583 3421 l
 2572 3413 l 2560 3405 l 2549 3396 l 2538 3387 l 2529 3377 l
 2521 3366 l 2515 3355 l 2510 3343 l 2506 3330 l 2502 3316 l
 2499 3301 l 2497 3286 l 2494 3271 l 2490 3257 l 2486 3245 l
 2480 3235 l 2474 3227 l 2465 3220 l 2455 3214 l 2443 3210 l
 2429 3206 l 2414 3203 l 2399 3199 l 2384 3196 l 2369 3192 l
 2356 3188 l 2344 3183 l 2335 3177 l 2327 3170 l 2319 3161 l
 2310 3150 l 2302 3137 l 2293 3121 l 2283 3104 l 2275 3088 l
 2268 3074 l 2264 3066 l 2262 3062 l 2262 3061 l 2263 3061 l
 2267 3059 l 2276 3055 l 2290 3048 l 2308 3039 l 2325 3031 l
 2339 3024 l 2348 3020 l 2352 3018 l 2353 3018 l 2353 3019 l
 2356 3024 l 2361 3035 l 2368 3049 l 2377 3065 l 2386 3079 l
 2394 3091 l 2403 3100 l 2412 3107 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 1890 1260 m 1800 900 l 1530 900 l 1350 1260 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 90.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1890 1260 m 1980 900 l 2250 900 l 2430 1260 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 126.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1890 2745 m 1980 2385 l 2250 2385 l 2430 2745 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 126.00 159.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3060 4815 m 3150 4455 l 3420 4455 l 3600 4815 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 204.00 297.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 720 4815 m 630 4455 l 360 4455 l 180 4815 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 12.00 297.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
15.000 slw
gs  clippath
3845 1290 m 3975 1290 l 3975 1230 l 3845 1230 l 3845 1230 l 3935 1260 l 3845 1290 l cp
eoclip
n 90 1260 m
 3960 1260 l gs col0 s gr gr

% arrowhead
n 3845 1290 m 3935 1260 l 3845 1230 l 3845 1290 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1920 475 m 1920 345 l 1860 345 l 1860 475 l 1860 475 l 1890 385 l 1920 475 l cp
eoclip
n 1890 1350 m
 1890 360 l gs col0 s gr gr

% arrowhead
n 1920 475 m 1890 385 l 1860 475 l 1920 475 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
n 1350 360 m
 1350 540 l gs col0 s gr 
% Polyline
n 1800 360 m
 1800 540 l gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
3845 2775 m 3975 2775 l 3975 2715 l 3845 2715 l 3845 2715 l 3935 2745 l 3845 2775 l cp
eoclip
n 90 2745 m
 3960 2745 l gs col0 s gr gr

% arrowhead
n 3845 2775 m 3935 2745 l 3845 2715 l 3845 2775 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1920 1960 m 1920 1830 l 1860 1830 l 1860 1960 l 1860 1960 l 1890 1870 l 1920 1960 l cp
eoclip
n 1890 2835 m
 1890 1845 l gs col0 s gr gr

% arrowhead
n 1920 1960 m 1890 1870 l 1860 1960 l 1920 1960 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
n 1350 1845 m
 1350 2025 l gs col0 s gr 
% Polyline
n 1800 1845 m
 1800 2025 l gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
3845 4845 m 3975 4845 l 3975 4785 l 3845 4785 l 3845 4785 l 3935 4815 l 3845 4845 l cp
eoclip
n 90 4815 m
 3960 4815 l gs col0 s gr gr

% arrowhead
n 3845 4845 m 3935 4815 l 3845 4785 l 3845 4845 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1920 4030 m 1920 3900 l 1860 3900 l 1860 4030 l 1860 4030 l 1890 3940 l 1920 4030 l cp
eoclip
n 1890 4905 m
 1890 3915 l gs col0 s gr gr

% arrowhead
n 1920 4030 m 1890 3940 l 1860 4030 l 1920 4030 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3060 4905 m
 3060 4815 l gs col0 s gr 
% Polyline
n 720 4905 m
 720 4815 l gs col0 s gr 
% Polyline
7.500 slw
 [30] 0 sd
n 720 4815 m
 720 3960 l gs col0 s gr  [] 0 sd
% Polyline
 [30] 0 sd
n 3060 4815 m
 3060 3960 l gs col0 s gr  [] 0 sd
% Polyline
n 1305 3915 m
 1305 4095 l gs col0 s gr 
% Polyline
n 1800 3915 m
 1800 4095 l gs col0 s gr 
/Symbol ff 174.63 scf sf
1620 495 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1755 495 m
gs 1 -1 sc (F\(   \)) dup sw pop neg 0 rm  col0 sh gr
/Symbol ff 174.63 scf sf
1620 1980 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1755 1980 m
gs 1 -1 sc (Z\(   \)) dup sw pop neg 0 rm  col0 sh gr
/Symbol ff 174.63 scf sf
1620 4050 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1755 4050 m
gs 1 -1 sc (M\(   \)) dup sw pop neg 0 rm  col0 sh gr
/Symbol ff 174.63 scf sf
701 5059 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 127.00 scf sf
773 5106 m
gs 1 -1 sc (0) col0 sh gr
/Symbol ff 174.63 scf sf
3041 5059 m
gs 1 -1 sc (w) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 127.00 scf sf
3113 5106 m
gs 1 -1 sc (0) col0 sh gr
/Symbol ff 174.63 scf sf
3870 1485 m
gs 1 -1 sc (w) col0 sh gr
/Symbol ff 174.63 scf sf
3870 2970 m
gs 1 -1 sc (w) col0 sh gr
/Symbol ff 174.63 scf sf
3870 5040 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
630 5040 m
gs 1 -1 sc (-) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 174.63 scf sf
1890 5085 m
gs 1 -1 sc (0) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
